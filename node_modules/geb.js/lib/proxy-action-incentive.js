"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.GebProxyIncentivesActions = void 0;
var geb_contract_base_1 = require("@reflexer-finance/geb-contract-base");
var bignumber_1 = require("@ethersproject/bignumber");
var geb_contract_api_1 = require("@reflexer-finance/geb-contract-api");
var GebProxyIncentivesActions = /** @class */ (function (_super) {
    __extends(GebProxyIncentivesActions, _super);
    function GebProxyIncentivesActions(
    /**
     * Address of the underlying proxy
     */
    proxyAddress, network, chainProvider) {
        var _this = _super.call(this, geb_contract_base_1.getAddressList(network).PROXY_ACTIONS, chainProvider) || this;
        _this.proxyAddress = proxyAddress;
        _this.addressList = geb_contract_base_1.getAddressList(network);
        _this.proxy = new geb_contract_api_1.DsProxy(proxyAddress, _this.chainProvider);
        _this.proxyActionAddress = _this.addressList.PROXY_ACTIONS;
        _this.address = proxyAddress;
        return _this;
    }
    // Override getTransactionRequest to use proxy
    GebProxyIncentivesActions.prototype.getTransactionRequest = function (abiFragment, params, ethValue) {
        var data = this.chainProvider.encodeFunctionData(params, abiFragment);
        if (!ethValue) {
            ethValue = bignumber_1.BigNumber.from('0');
        }
        return this.proxy.execute1(ethValue, this.proxyActionAddress, data);
    };
    GebProxyIncentivesActions.prototype.allowHandler = function (usr, ok) {
        // prettier-ignore
        return _super.prototype.allowHandler.call(this, this.addressList.SAFE_MANAGER, usr, ok);
    };
    GebProxyIncentivesActions.prototype.allowSAFE = function (safe, usr, ok) {
        // prettier-ignore
        return _super.prototype.allowSAFE.call(this, this.addressList.SAFE_MANAGER, safe, usr, ok);
    };
    GebProxyIncentivesActions.prototype.approveSAFEModification = function (safeEngine, usr) {
        // prettier-ignore
        return _super.prototype.approveSAFEModification.call(this, safeEngine, usr);
    };
    GebProxyIncentivesActions.prototype.coinJoin_join = function (apt, safeHandler, wad) {
        // prettier-ignore
        return _super.prototype.coinJoin_join.call(this, apt, safeHandler, wad);
    };
    GebProxyIncentivesActions.prototype.denySAFEModification = function (safeEngine, usr) {
        // prettier-ignore
        return _super.prototype.denySAFEModification.call(this, safeEngine, usr);
    };
    GebProxyIncentivesActions.prototype.enterSystem = function (src, safe) {
        // prettier-ignore
        return _super.prototype.enterSystem.call(this, this.addressList.SAFE_MANAGER, src, safe);
    };
    GebProxyIncentivesActions.prototype.ethJoin_join1 = function (ethValue, apt, safe) {
        // prettier-ignore
        return _super.prototype.ethJoin_join1.call(this, bignumber_1.BigNumber.from(ethValue), apt, safe);
    };
    GebProxyIncentivesActions.prototype.ethJoin_join2 = function (ethValue, apt, safe, value) {
        // prettier-ignore
        return _super.prototype.ethJoin_join2.call(this, bignumber_1.BigNumber.from(ethValue), apt, safe, value);
    };
    GebProxyIncentivesActions.prototype.exitAndRemoveLiquidity = function (coinJoin, incentives, uniswapRouter, minTokenAmounts) {
        // prettier-ignore
        return _super.prototype.exitAndRemoveLiquidity.call(this, this.addressList.GEB_COIN_JOIN, this.addressList.GEB_UNISWAP_INCENTIVE, this.addressList.UNISWAP_ROUTER, minTokenAmounts);
    };
    GebProxyIncentivesActions.prototype.exitETH = function (safe, wad) {
        // prettier-ignore
        return _super.prototype.exitETH.call(this, this.addressList.SAFE_MANAGER, this.addressList.GEB_JOIN_ETH_A, safe, wad);
    };
    GebProxyIncentivesActions.prototype.exitMine = function (incentives) {
        // prettier-ignore
        return _super.prototype.exitMine.call(this, incentives);
    };
    GebProxyIncentivesActions.prototype.exitRemoveLiquidityRepayDebt = function (manager, coinJoin, safe, incentives, uniswapRouter, minTokenAmounts) {
        // prettier-ignore
        return _super.prototype.exitRemoveLiquidityRepayDebt.call(this, this.addressList.SAFE_MANAGER, this.addressList.GEB_COIN_JOIN, safe, this.addressList.GEB_UNISWAP_INCENTIVE, this.addressList.UNISWAP_ROUTER, minTokenAmounts);
    };
    GebProxyIncentivesActions.prototype.exitRemoveLiquidityRepayDebtFreeETH = function (manager, ethJoin, coinJoin, safe, incentives, ethToFree, uniswapRouter, minTokenAmounts) {
        // prettier-ignore
        return _super.prototype.exitRemoveLiquidityRepayDebtFreeETH.call(this, this.addressList.SAFE_MANAGER, this.addressList.GEB_JOIN_ETH_A, this.addressList.GEB_COIN_JOIN, safe, this.addressList.GEB_UNISWAP_INCENTIVE, ethToFree, this.addressList.UNISWAP_ROUTER, minTokenAmounts);
    };
    GebProxyIncentivesActions.prototype.freeETH = function (manager, ethJoin, safe, wad) {
        // prettier-ignore
        return _super.prototype.freeETH.call(this, this.addressList.SAFE_MANAGER, this.addressList.GEB_JOIN_ETH_A, safe, wad);
    };
    GebProxyIncentivesActions.prototype.generateDebt = function (manager, taxCollector, coinJoin, safe, wad) {
        // prettier-ignore
        return _super.prototype.generateDebt.call(this, this.addressList.SAFE_MANAGER, this.addressList.GEB_TAX_COLLECTOR, this.addressList.GEB_COIN_JOIN, safe, wad);
    };
    GebProxyIncentivesActions.prototype.generateDebtAndProvideLiquidityStake = function (ethValue, manager, taxCollector, coinJoin, uniswapRouter, incentives, safe, wad, minTokenAmounts) {
        // prettier-ignore
        return _super.prototype.generateDebtAndProvideLiquidityStake.call(this, bignumber_1.BigNumber.from(ethValue), this.addressList.SAFE_MANAGER, this.addressList.GEB_TAX_COLLECTOR, this.addressList.GEB_COIN_JOIN, this.addressList.UNISWAP_ROUTER, this.addressList.GEB_UNISWAP_INCENTIVE, safe, wad, minTokenAmounts);
    };
    GebProxyIncentivesActions.prototype.generateDebtAndProvideLiquidityUniswap = function (ethValue, manager, taxCollector, coinJoin, uniswapRouter, safe, wad, minTokenAmounts) {
        // prettier-ignore
        return _super.prototype.generateDebtAndProvideLiquidityUniswap.call(this, bignumber_1.BigNumber.from(ethValue), this.addressList.SAFE_MANAGER, this.addressList.GEB_TAX_COLLECTOR, this.addressList.GEB_COIN_JOIN, this.addressList.UNISWAP_ROUTER, safe, wad, minTokenAmounts);
    };
    GebProxyIncentivesActions.prototype.getLockedReward = function (incentives, campaignId) {
        // prettier-ignore
        return _super.prototype.getLockedReward.call(this, this.addressList.GEB_UNISWAP_INCENTIVE, campaignId);
    };
    GebProxyIncentivesActions.prototype.harvestReward = function (incentives, campaignId) {
        // prettier-ignore
        return _super.prototype.harvestReward.call(this, this.addressList.GEB_UNISWAP_INCENTIVE, campaignId);
    };
    GebProxyIncentivesActions.prototype.lockETH = function (ethValue, manager, ethJoin, safe) {
        // prettier-ignore
        return _super.prototype.lockETH.call(this, bignumber_1.BigNumber.from(ethValue), this.addressList.SAFE_MANAGER, this.addressList.GEB_JOIN_ETH_A, safe);
    };
    GebProxyIncentivesActions.prototype.lockETHAndGenerateDebt = function (ethValue, manager, taxCollector, ethJoin, coinJoin, safe, deltaWad) {
        // prettier-ignore
        return _super.prototype.lockETHAndGenerateDebt.call(this, bignumber_1.BigNumber.from(ethValue), this.addressList.SAFE_MANAGER, this.addressList.GEB_TAX_COLLECTOR, this.addressList.GEB_JOIN_ETH_A, this.addressList.GEB_COIN_JOIN, safe, deltaWad);
    };
    GebProxyIncentivesActions.prototype.lockETHGenerateDebtProvideLiquidityStake = function (ethValue, manager, taxCollector, ethJoin, coinJoin, uniswapRouter, incentives, safe, deltaWad, liquidityWad, minTokenAmounts) {
        // prettier-ignore
        return _super.prototype.lockETHGenerateDebtProvideLiquidityStake.call(this, bignumber_1.BigNumber.from(ethValue), this.addressList.SAFE_MANAGER, this.addressList.GEB_TAX_COLLECTOR, this.addressList.GEB_JOIN_ETH_A, this.addressList.GEB_COIN_JOIN, this.addressList.UNISWAP_ROUTER, this.addressList.GEB_UNISWAP_INCENTIVE, safe, deltaWad, liquidityWad, minTokenAmounts);
    };
    GebProxyIncentivesActions.prototype.lockETHGenerateDebtProvideLiquidityUniswap = function (ethValue, manager, taxCollector, ethJoin, coinJoin, uniswapRouter, safe, deltaWad, liquidityWad, minTokenAmounts) {
        // prettier-ignore
        return _super.prototype.lockETHGenerateDebtProvideLiquidityUniswap.call(this, bignumber_1.BigNumber.from(ethValue), this.addressList.SAFE_MANAGER, this.addressList.GEB_TAX_COLLECTOR, this.addressList.GEB_JOIN_ETH_A, this.addressList.GEB_COIN_JOIN, this.addressList.UNISWAP_ROUTER, safe, deltaWad, liquidityWad, minTokenAmounts);
    };
    GebProxyIncentivesActions.prototype.modifySAFECollateralization = function (manager, safe, deltaCollateral, deltaDebt) {
        // prettier-ignore
        return _super.prototype.modifySAFECollateralization.call(this, this.addressList.SAFE_MANAGER, safe, deltaCollateral, deltaDebt);
    };
    GebProxyIncentivesActions.prototype.moveSAFE = function (manager, safeSrc, safeDst) {
        // prettier-ignore
        return _super.prototype.moveSAFE.call(this, this.addressList.SAFE_MANAGER, safeSrc, safeDst);
    };
    GebProxyIncentivesActions.prototype.openLockETHAndGenerateDebt = function (ethValue, manager, taxCollector, ethJoin, coinJoin, collateralType, deltaWad) {
        // prettier-ignore
        return _super.prototype.openLockETHAndGenerateDebt.call(this, bignumber_1.BigNumber.from(ethValue), this.addressList.SAFE_MANAGER, this.addressList.GEB_TAX_COLLECTOR, this.addressList.GEB_JOIN_ETH_A, this.addressList.GEB_COIN_JOIN, collateralType, deltaWad);
    };
    GebProxyIncentivesActions.prototype.openLockETHGenerateDebtProvideLiquidityStake = function (ethValue, manager, taxCollector, ethJoin, coinJoin, uniswapRouter, incentives, deltaWad, liquidityWad, minTokenAmounts) {
        // prettier-ignore
        return _super.prototype.openLockETHGenerateDebtProvideLiquidityStake.call(this, bignumber_1.BigNumber.from(ethValue), this.addressList.SAFE_MANAGER, this.addressList.GEB_TAX_COLLECTOR, this.addressList.GEB_JOIN_ETH_A, this.addressList.GEB_COIN_JOIN, this.addressList.UNISWAP_ROUTER, this.addressList.GEB_UNISWAP_INCENTIVE, deltaWad, liquidityWad, minTokenAmounts);
    };
    GebProxyIncentivesActions.prototype.openLockETHGenerateDebtProvideLiquidityUniswap = function (ethValue, manager, taxCollector, ethJoin, coinJoin, uniswapRouter, deltaWad, liquidityWad, minTokenAmounts) {
        // prettier-ignore
        return _super.prototype.openLockETHGenerateDebtProvideLiquidityUniswap.call(this, bignumber_1.BigNumber.from(ethValue), this.addressList.SAFE_MANAGER, this.addressList.GEB_TAX_COLLECTOR, this.addressList.GEB_JOIN_ETH_A, this.addressList.GEB_COIN_JOIN, this.addressList.UNISWAP_ROUTER, deltaWad, liquidityWad, minTokenAmounts);
    };
    GebProxyIncentivesActions.prototype.openSAFE = function (manager, collateralType, usr) {
        // prettier-ignore
        return _super.prototype.openSAFE.call(this, this.addressList.SAFE_MANAGER, collateralType, usr);
    };
    GebProxyIncentivesActions.prototype.provideLiquidityUniswap = function (ethValue, coinJoin, uniswapRouter, wad, minTokenAmounts) {
        // prettier-ignore
        return _super.prototype.provideLiquidityUniswap.call(this, bignumber_1.BigNumber.from(ethValue), this.addressList.GEB_COIN_JOIN, this.addressList.UNISWAP_ROUTER, wad, minTokenAmounts);
    };
    GebProxyIncentivesActions.prototype.quitSystem = function (manager, safe, dst) {
        // prettier-ignore
        return _super.prototype.quitSystem.call(this, this.addressList.SAFE_MANAGER, safe, dst);
    };
    GebProxyIncentivesActions.prototype.removeLiquidityUniswap = function (uniswapRouter, systemCoin, value, minTokenAmounts) {
        // prettier-ignore
        return _super.prototype.removeLiquidityUniswap.call(this, this.addressList.UNISWAP_ROUTER, systemCoin, value, minTokenAmounts);
    };
    GebProxyIncentivesActions.prototype.repayDebt = function (
    // manager: string,
    coinJoin, safe, wad) {
        // prettier-ignore
        return _super.prototype.repayDebt.call(this, this.addressList.SAFE_MANAGER, this.addressList.GEB_COIN_JOIN, safe, wad);
    };
    GebProxyIncentivesActions.prototype.repayDebtAndFreeETH = function (manager, ethJoin, coinJoin, safe, collateralWad, deltaWad) {
        // prettier-ignore
        return _super.prototype.repayDebtAndFreeETH.call(this, this.addressList.SAFE_MANAGER, this.addressList.GEB_JOIN_ETH_A, this.addressList.GEB_COIN_JOIN, safe, collateralWad, deltaWad);
    };
    GebProxyIncentivesActions.prototype.stakeInMine = function (incentives, wad) {
        // prettier-ignore
        return _super.prototype.stakeInMine.call(this, this.addressList.GEB_UNISWAP_INCENTIVE, wad);
    };
    GebProxyIncentivesActions.prototype.transfer = function (collateral, dst, amt) {
        // prettier-ignore
        return _super.prototype.transfer.call(this, collateral, dst, amt);
    };
    GebProxyIncentivesActions.prototype.transferCollateral = function (manager, safe, dst, wad) {
        // prettier-ignore
        return _super.prototype.transferCollateral.call(this, this.addressList.SAFE_MANAGER, safe, dst, wad);
    };
    GebProxyIncentivesActions.prototype.transferInternalCoins = function (manager, safe, dst, rad) {
        // prettier-ignore
        return _super.prototype.transferInternalCoins.call(this, this.addressList.SAFE_MANAGER, safe, dst, rad);
    };
    GebProxyIncentivesActions.prototype.transferSAFEOwnership = function (manager, safe, usr) {
        // prettier-ignore
        return _super.prototype.transferSAFEOwnership.call(this, this.addressList.SAFE_MANAGER, safe, usr);
    };
    GebProxyIncentivesActions.prototype.transferSAFEOwnershipToProxy = function (safe, dst) {
        // prettier-ignore
        return _super.prototype.transferSAFEOwnershipToProxy.call(this, this.addressList.PROXY_REGISTRY, this.addressList.SAFE_MANAGER, safe, dst);
    };
    GebProxyIncentivesActions.prototype.withdrawAndHarvest = function (incentives, value, campaignId) {
        // prettier-ignore
        return _super.prototype.withdrawAndHarvest.call(this, this.addressList.GEB_UNISWAP_INCENTIVE, value, campaignId);
    };
    GebProxyIncentivesActions.prototype.withdrawAndRemoveLiquidity = function (coinJoin, incentives, value, uniswapRouter, minTokenAmounts) {
        // prettier-ignore
        return _super.prototype.withdrawAndRemoveLiquidity.call(this, this.addressList.GEB_COIN_JOIN, this.addressList.GEB_UNISWAP_INCENTIVE, value, this.addressList.UNISWAP_ROUTER, minTokenAmounts);
    };
    GebProxyIncentivesActions.prototype.withdrawFromMine = function (incentives, value) {
        // prettier-ignore
        return _super.prototype.withdrawFromMine.call(this, this.addressList.GEB_UNISWAP_INCENTIVE, value);
    };
    GebProxyIncentivesActions.prototype.withdrawRemoveLiquidityRepayDebt = function (manager, coinJoin, safe, incentives, value, uniswapRouter, minTokenAmounts) {
        // prettier-ignore
        return _super.prototype.withdrawRemoveLiquidityRepayDebt.call(this, this.addressList.SAFE_MANAGER, this.addressList.GEB_COIN_JOIN, safe, this.addressList.GEB_UNISWAP_INCENTIVE, value, this.addressList.UNISWAP_ROUTER, minTokenAmounts);
    };
    GebProxyIncentivesActions.prototype.withdrawRemoveLiquidityRepayDebtFreeETH = function (manager, ethJoin, coinJoin, safe, incentives, valueToWithdraw, ethToFree, uniswapRouter, minTokenAmounts) {
        // prettier-ignore
        return _super.prototype.withdrawRemoveLiquidityRepayDebtFreeETH.call(this, this.addressList.SAFE_MANAGER, this.addressList.GEB_JOIN_ETH_A, this.addressList.GEB_COIN_JOIN, safe, this.addressList.GEB_UNISWAP_INCENTIVE, valueToWithdraw, ethToFree, this.addressList.UNISWAP_ROUTER, minTokenAmounts);
    };
    return GebProxyIncentivesActions;
}(geb_contract_api_1.GebProxyIncentivesActions));
exports.GebProxyIncentivesActions = GebProxyIncentivesActions;
//# sourceMappingURL=proxy-action-incentive.js.map