import { AccountingEngine, TaxCollector, LiquidationEngine, OracleRelayer, GlobalSettlement, DebtAuctionHouse, PreSettlementSurplusAuctionHouse, Coin, GebSafeManager, GetSafes, BasicCollateralJoin, CoinJoin, GebProxyRegistry, EnglishCollateralAuctionHouse, FixedDiscountCollateralAuctionHouse, DsToken, Weth9, SafeEngine, ChainlinkMedianEthusd, UniswapConsecutiveSlotsMedianRaiusd, Osm, Dsm, StabilityFeeTreasury, GebUniswapRollingDistributionIncentives } from '.';
import { GebProviderInterface, GebDeployment } from '@reflexer-finance/geb-contract-base';
import { RateSetter } from './generated/RateSetter';
import { PiRawPerSecondCalculator } from './generated/PIRawPerSecondCalculator';
export declare class ContractApis {
    chainProvider: GebProviderInterface;
    safeEngine: SafeEngine;
    accountingEngine: AccountingEngine;
    taxCollector: TaxCollector;
    liquidationEngine: LiquidationEngine;
    oracleRelayer: OracleRelayer;
    globalSettlement: GlobalSettlement;
    debtAuctionHouse: DebtAuctionHouse;
    preSettlementSurplusAuctionHouse: PreSettlementSurplusAuctionHouse;
    stabilityFeeTreasury: StabilityFeeTreasury;
    safeManager: GebSafeManager;
    getSafes: GetSafes;
    joinETH_A: BasicCollateralJoin;
    joinCoin: CoinJoin;
    coin: Coin;
    proxyRegistry: GebProxyRegistry;
    collateralAuctionHouseETH_A: FixedDiscountCollateralAuctionHouse | EnglishCollateralAuctionHouse;
    protocolToken: DsToken;
    medianizerEth: ChainlinkMedianEthusd;
    medianizerCoin: UniswapConsecutiveSlotsMedianRaiusd;
    rateSetter: RateSetter;
    piCalculator: PiRawPerSecondCalculator;
    fsmEth: Osm;
    fsmCoin: Dsm;
    weth: Weth9;
    uniswapIncentive: GebUniswapRollingDistributionIncentives;
    constructor(network: GebDeployment, chainProvider: GebProviderInterface);
}
