import { BaseContractAPI } from '@reflexer-finance/geb-contract-base';
import { MulticallRequest } from '@reflexer-finance/geb-contract-base';
import { TransactionRequest } from '@reflexer-finance/geb-contract-base';
import { BytesLike } from '@ethersproject/bytes';
import { BigNumberish } from '@ethersproject/bignumber';
export declare class DsProxy extends BaseContractAPI {
    authority(): Promise<string>;
    authority(multicall: true): MulticallRequest<string>;
    cache(): Promise<string>;
    cache(multicall: true): MulticallRequest<string>;
    execute__AddressBytes(ethValue: BigNumberish, _target: string, _data: BytesLike): TransactionRequest;
    execute__BytesBytes(ethValue: BigNumberish, _code: BytesLike, _data: BytesLike): TransactionRequest;
    owner(): Promise<string>;
    owner(multicall: true): MulticallRequest<string>;
    setAuthority(authority_: string): TransactionRequest;
    setCache(_cacheAddr: string): TransactionRequest;
    setOwner(owner_: string): TransactionRequest;
}
