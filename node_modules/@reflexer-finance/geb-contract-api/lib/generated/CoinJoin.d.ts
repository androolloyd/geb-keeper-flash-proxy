import { BaseContractAPI } from '@reflexer-finance/geb-contract-base';
import { MulticallRequest } from '@reflexer-finance/geb-contract-base';
import { TransactionRequest } from '@reflexer-finance/geb-contract-base';
import { BigNumberish } from '@ethersproject/bignumber';
import { BigNumber } from '@ethersproject/bignumber';
export declare class CoinJoin extends BaseContractAPI {
    addAuthorization(account: string): TransactionRequest;
    authorizedAccounts(address: string): Promise<BigNumber>;
    authorizedAccounts(address: string, multicall: true): MulticallRequest<BigNumber>;
    contractEnabled(): Promise<BigNumber>;
    contractEnabled(multicall: true): MulticallRequest<BigNumber>;
    decimals(): Promise<BigNumber>;
    decimals(multicall: true): MulticallRequest<BigNumber>;
    disableContract(): TransactionRequest;
    exit(account: string, wad: BigNumberish): TransactionRequest;
    join(account: string, wad: BigNumberish): TransactionRequest;
    removeAuthorization(account: string): TransactionRequest;
    safeEngine(): Promise<string>;
    safeEngine(multicall: true): MulticallRequest<string>;
    systemCoin(): Promise<string>;
    systemCoin(multicall: true): MulticallRequest<string>;
}
