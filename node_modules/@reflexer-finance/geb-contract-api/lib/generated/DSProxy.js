"use strict";
/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.DsProxy = void 0;
var geb_contract_base_1 = require("@reflexer-finance/geb-contract-base");
var bignumber_1 = require("@ethersproject/bignumber");
var DsProxy = /** @class */ (function (_super) {
    __extends(DsProxy, _super);
    function DsProxy() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DsProxy.prototype.authority = function (multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [], "name": "authority", "outputs": [{ "internalType": "contract DSAuthority", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [], multicall);
    };
    DsProxy.prototype.cache = function (multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [], "name": "cache", "outputs": [{ "internalType": "contract DSProxyCache", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [], multicall);
    };
    DsProxy.prototype.execute__AddressBytes = function (ethValue, _target, _data) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "_target", "type": "address" }, { "internalType": "bytes", "name": "_data", "type": "bytes" }], "name": "execute", "outputs": [{ "internalType": "bytes", "name": "response", "type": "bytes" }], "stateMutability": "payable", "type": "function" };
        return this.getTransactionRequest(abi, [_target, _data], bignumber_1.BigNumber.from(ethValue));
    };
    DsProxy.prototype.execute__BytesBytes = function (ethValue, _code, _data) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "bytes", "name": "_code", "type": "bytes" }, { "internalType": "bytes", "name": "_data", "type": "bytes" }], "name": "execute", "outputs": [{ "internalType": "address", "name": "target", "type": "address" }, { "internalType": "bytes", "name": "response", "type": "bytes" }], "stateMutability": "payable", "type": "function" };
        return this.getTransactionRequest(abi, [_code, _data], bignumber_1.BigNumber.from(ethValue));
    };
    DsProxy.prototype.owner = function (multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [], "name": "owner", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [], multicall);
    };
    DsProxy.prototype.setAuthority = function (authority_) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "contract DSAuthority", "name": "authority_", "type": "address" }], "name": "setAuthority", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [authority_]);
    };
    DsProxy.prototype.setCache = function (_cacheAddr) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "_cacheAddr", "type": "address" }], "name": "setCache", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [_cacheAddr]);
    };
    DsProxy.prototype.setOwner = function (owner_) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "owner_", "type": "address" }], "name": "setOwner", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [owner_]);
    };
    return DsProxy;
}(geb_contract_base_1.BaseContractAPI));
exports.DsProxy = DsProxy;
