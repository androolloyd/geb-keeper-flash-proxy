"use strict";
/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Multicall = void 0;
var geb_contract_base_1 = require("@reflexer-finance/geb-contract-base");
var Multicall = /** @class */ (function (_super) {
    __extends(Multicall, _super);
    function Multicall() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Multicall.prototype.aggregate = function (calls) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "components": [{ "internalType": "address", "name": "target", "type": "address" }, { "internalType": "bytes", "name": "callData", "type": "bytes" }], "internalType": "struct Multicall.Call[]", "name": "calls", "type": "tuple[]" }], "name": "aggregate", "outputs": [{ "internalType": "uint256", "name": "blockNumber", "type": "uint256" }, { "internalType": "bytes[]", "name": "returnData", "type": "bytes[]" }], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [calls]);
    };
    Multicall.prototype.aggregate_readOnly = function (calls, multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "constant": false, "inputs": [{ "components": [{ "name": "target", "type": "address" }, { "name": "callData", "type": "bytes" }], "name": "calls", "type": "tuple[]" }], "name": "aggregate", "outputs": [{ "name": "blockNumber", "type": "uint256" }, { "name": "returnData", "type": "bytes[]" }], "payable": false, "stateMutability": "nonpayable", "type": "function" };
        return this.ethCallOrMulticall(abi, [calls], multicall);
    };
    Multicall.prototype.getBlockHash = function (blockNumber, multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "uint256", "name": "blockNumber", "type": "uint256" }], "name": "getBlockHash", "outputs": [{ "internalType": "bytes32", "name": "blockHash", "type": "bytes32" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [blockNumber], multicall);
    };
    Multicall.prototype.getCurrentBlockCoinbase = function (multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [], "name": "getCurrentBlockCoinbase", "outputs": [{ "internalType": "address", "name": "coinbase", "type": "address" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [], multicall);
    };
    Multicall.prototype.getCurrentBlockDifficulty = function (multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [], "name": "getCurrentBlockDifficulty", "outputs": [{ "internalType": "uint256", "name": "difficulty", "type": "uint256" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [], multicall);
    };
    Multicall.prototype.getCurrentBlockGasLimit = function (multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [], "name": "getCurrentBlockGasLimit", "outputs": [{ "internalType": "uint256", "name": "gaslimit", "type": "uint256" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [], multicall);
    };
    Multicall.prototype.getCurrentBlockTimestamp = function (multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [], "name": "getCurrentBlockTimestamp", "outputs": [{ "internalType": "uint256", "name": "timestamp", "type": "uint256" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [], multicall);
    };
    Multicall.prototype.getEthBalance = function (addr, multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "addr", "type": "address" }], "name": "getEthBalance", "outputs": [{ "internalType": "uint256", "name": "balance", "type": "uint256" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [addr], multicall);
    };
    Multicall.prototype.getLastBlockHash = function (multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [], "name": "getLastBlockHash", "outputs": [{ "internalType": "bytes32", "name": "blockHash", "type": "bytes32" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [], multicall);
    };
    return Multicall;
}(geb_contract_base_1.BaseContractAPI));
exports.Multicall = Multicall;
