import { BaseContractAPI } from '@reflexer-finance/geb-contract-base';
import { MulticallRequest } from '@reflexer-finance/geb-contract-base';
import { TransactionRequest } from '@reflexer-finance/geb-contract-base';
import { BigNumberish } from '@ethersproject/bignumber';
import { BigNumber } from '@ethersproject/bignumber';
export declare class DsValue extends BaseContractAPI {
    authority(): Promise<string>;
    authority(multicall: true): MulticallRequest<string>;
    getResultWithValidity(): Promise<{
        0: BigNumber;
        1: boolean;
    }>;
    getResultWithValidity(multicall: true): MulticallRequest<{
        0: BigNumber;
        1: boolean;
    }>;
    owner(): Promise<string>;
    owner(multicall: true): MulticallRequest<string>;
    read(): Promise<BigNumber>;
    read(multicall: true): MulticallRequest<BigNumber>;
    restartValue(): TransactionRequest;
    setAuthority(authority_: string): TransactionRequest;
    setOwner(owner_: string): TransactionRequest;
    updateResult(newMedian: BigNumberish): TransactionRequest;
}
