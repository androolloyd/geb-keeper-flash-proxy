import { BaseContractAPI } from '@reflexer-finance/geb-contract-base';
import { MulticallRequest } from '@reflexer-finance/geb-contract-base';
import { TransactionRequest } from '@reflexer-finance/geb-contract-base';
import { BigNumberish } from '@ethersproject/bignumber';
import { BigNumber } from '@ethersproject/bignumber';
export declare class Weth9 extends BaseContractAPI {
    allowance(address1: string, address2: string): Promise<BigNumber>;
    allowance(address1: string, address2: string, multicall: true): MulticallRequest<BigNumber>;
    approve(guy: string, wad: BigNumberish): TransactionRequest;
    balanceOf(address: string): Promise<BigNumber>;
    balanceOf(address: string, multicall: true): MulticallRequest<BigNumber>;
    decimals(): Promise<number>;
    decimals(multicall: true): MulticallRequest<number>;
    deposit(ethValue: BigNumberish): TransactionRequest;
    name(): Promise<string>;
    name(multicall: true): MulticallRequest<string>;
    symbol(): Promise<string>;
    symbol(multicall: true): MulticallRequest<string>;
    totalSupply(): Promise<BigNumber>;
    totalSupply(multicall: true): MulticallRequest<BigNumber>;
    transfer(dst: string, wad: BigNumberish): TransactionRequest;
    transferFrom(src: string, dst: string, wad: BigNumberish): TransactionRequest;
    withdraw(wad: BigNumberish): TransactionRequest;
}
