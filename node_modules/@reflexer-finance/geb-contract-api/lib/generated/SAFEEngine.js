"use strict";
/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.SafeEngine = void 0;
var geb_contract_base_1 = require("@reflexer-finance/geb-contract-base");
var SafeEngine = /** @class */ (function (_super) {
    __extends(SafeEngine, _super);
    function SafeEngine() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SafeEngine.prototype.addAuthorization = function (account) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }], "name": "addAuthorization", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [account]);
    };
    SafeEngine.prototype.approveSAFEModification = function (account) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }], "name": "approveSAFEModification", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [account]);
    };
    SafeEngine.prototype.authorizedAccounts = function (address, multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "authorizedAccounts", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [address], multicall);
    };
    SafeEngine.prototype.canModifySAFE = function (safe, account, multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "safe", "type": "address" }, { "internalType": "address", "name": "account", "type": "address" }], "name": "canModifySAFE", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [safe, account], multicall);
    };
    SafeEngine.prototype.coinBalance = function (address, multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "coinBalance", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [address], multicall);
    };
    SafeEngine.prototype.collateralTypes = function (bytes, multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }], "name": "collateralTypes", "outputs": [{ "internalType": "uint256", "name": "debtAmount", "type": "uint256" }, { "internalType": "uint256", "name": "accumulatedRate", "type": "uint256" }, { "internalType": "uint256", "name": "safetyPrice", "type": "uint256" }, { "internalType": "uint256", "name": "debtCeiling", "type": "uint256" }, { "internalType": "uint256", "name": "debtFloor", "type": "uint256" }, { "internalType": "uint256", "name": "liquidationPrice", "type": "uint256" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [bytes], multicall);
    };
    SafeEngine.prototype.confiscateSAFECollateralAndDebt = function (collateralType, safe, collateralCounterparty, debtCounterparty, deltaCollateral, deltaDebt) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "bytes32", "name": "collateralType", "type": "bytes32" }, { "internalType": "address", "name": "safe", "type": "address" }, { "internalType": "address", "name": "collateralCounterparty", "type": "address" }, { "internalType": "address", "name": "debtCounterparty", "type": "address" }, { "internalType": "int256", "name": "deltaCollateral", "type": "int256" }, { "internalType": "int256", "name": "deltaDebt", "type": "int256" }], "name": "confiscateSAFECollateralAndDebt", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [
            collateralType,
            safe,
            collateralCounterparty,
            debtCounterparty,
            deltaCollateral,
            deltaDebt,
        ]);
    };
    SafeEngine.prototype.contractEnabled = function (multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [], "name": "contractEnabled", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [], multicall);
    };
    SafeEngine.prototype.createUnbackedDebt = function (debtDestination, coinDestination, rad) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "debtDestination", "type": "address" }, { "internalType": "address", "name": "coinDestination", "type": "address" }, { "internalType": "uint256", "name": "rad", "type": "uint256" }], "name": "createUnbackedDebt", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [
            debtDestination,
            coinDestination,
            rad,
        ]);
    };
    SafeEngine.prototype.debtBalance = function (address, multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "debtBalance", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [address], multicall);
    };
    SafeEngine.prototype.denySAFEModification = function (account) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }], "name": "denySAFEModification", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [account]);
    };
    SafeEngine.prototype.disableContract = function () {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [], "name": "disableContract", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, []);
    };
    SafeEngine.prototype.globalDebt = function (multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [], "name": "globalDebt", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [], multicall);
    };
    SafeEngine.prototype.globalDebtCeiling = function (multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [], "name": "globalDebtCeiling", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [], multicall);
    };
    SafeEngine.prototype.globalUnbackedDebt = function (multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [], "name": "globalUnbackedDebt", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [], multicall);
    };
    SafeEngine.prototype.initializeCollateralType = function (collateralType) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "bytes32", "name": "collateralType", "type": "bytes32" }], "name": "initializeCollateralType", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [collateralType]);
    };
    SafeEngine.prototype.modifyCollateralBalance = function (collateralType, account, wad) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "bytes32", "name": "collateralType", "type": "bytes32" }, { "internalType": "address", "name": "account", "type": "address" }, { "internalType": "int256", "name": "wad", "type": "int256" }], "name": "modifyCollateralBalance", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [collateralType, account, wad]);
    };
    SafeEngine.prototype.modifyParameters__Bytes32Bytes32Uint256 = function (collateralType, parameter, data) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "bytes32", "name": "collateralType", "type": "bytes32" }, { "internalType": "bytes32", "name": "parameter", "type": "bytes32" }, { "internalType": "uint256", "name": "data", "type": "uint256" }], "name": "modifyParameters", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [
            collateralType,
            parameter,
            data,
        ]);
    };
    SafeEngine.prototype.modifyParameters__Bytes32Uint256 = function (parameter, data) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "bytes32", "name": "parameter", "type": "bytes32" }, { "internalType": "uint256", "name": "data", "type": "uint256" }], "name": "modifyParameters", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [parameter, data]);
    };
    SafeEngine.prototype.modifySAFECollateralization = function (collateralType, safe, collateralSource, debtDestination, deltaCollateral, deltaDebt) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "bytes32", "name": "collateralType", "type": "bytes32" }, { "internalType": "address", "name": "safe", "type": "address" }, { "internalType": "address", "name": "collateralSource", "type": "address" }, { "internalType": "address", "name": "debtDestination", "type": "address" }, { "internalType": "int256", "name": "deltaCollateral", "type": "int256" }, { "internalType": "int256", "name": "deltaDebt", "type": "int256" }], "name": "modifySAFECollateralization", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [
            collateralType,
            safe,
            collateralSource,
            debtDestination,
            deltaCollateral,
            deltaDebt,
        ]);
    };
    SafeEngine.prototype.removeAuthorization = function (account) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }], "name": "removeAuthorization", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [account]);
    };
    SafeEngine.prototype.safeDebtCeiling = function (multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [], "name": "safeDebtCeiling", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [], multicall);
    };
    SafeEngine.prototype.safeRights = function (address1, address2, multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "", "type": "address" }, { "internalType": "address", "name": "", "type": "address" }], "name": "safeRights", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [address1, address2], multicall);
    };
    SafeEngine.prototype.safes = function (bytes, address, multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }, { "internalType": "address", "name": "", "type": "address" }], "name": "safes", "outputs": [{ "internalType": "uint256", "name": "lockedCollateral", "type": "uint256" }, { "internalType": "uint256", "name": "generatedDebt", "type": "uint256" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [bytes, address], multicall);
    };
    SafeEngine.prototype.settleDebt = function (rad) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "uint256", "name": "rad", "type": "uint256" }], "name": "settleDebt", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [rad]);
    };
    SafeEngine.prototype.tokenCollateral = function (bytes, address, multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }, { "internalType": "address", "name": "", "type": "address" }], "name": "tokenCollateral", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [bytes, address], multicall);
    };
    SafeEngine.prototype.transferCollateral = function (collateralType, src, dst, wad) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "bytes32", "name": "collateralType", "type": "bytes32" }, { "internalType": "address", "name": "src", "type": "address" }, { "internalType": "address", "name": "dst", "type": "address" }, { "internalType": "uint256", "name": "wad", "type": "uint256" }], "name": "transferCollateral", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [collateralType, src, dst, wad]);
    };
    SafeEngine.prototype.transferInternalCoins = function (src, dst, rad) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "src", "type": "address" }, { "internalType": "address", "name": "dst", "type": "address" }, { "internalType": "uint256", "name": "rad", "type": "uint256" }], "name": "transferInternalCoins", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [src, dst, rad]);
    };
    SafeEngine.prototype.transferSAFECollateralAndDebt = function (collateralType, src, dst, deltaCollateral, deltaDebt) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "bytes32", "name": "collateralType", "type": "bytes32" }, { "internalType": "address", "name": "src", "type": "address" }, { "internalType": "address", "name": "dst", "type": "address" }, { "internalType": "int256", "name": "deltaCollateral", "type": "int256" }, { "internalType": "int256", "name": "deltaDebt", "type": "int256" }], "name": "transferSAFECollateralAndDebt", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [
            collateralType,
            src,
            dst,
            deltaCollateral,
            deltaDebt,
        ]);
    };
    SafeEngine.prototype.updateAccumulatedRate = function (collateralType, surplusDst, rateMultiplier) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "bytes32", "name": "collateralType", "type": "bytes32" }, { "internalType": "address", "name": "surplusDst", "type": "address" }, { "internalType": "int256", "name": "rateMultiplier", "type": "int256" }], "name": "updateAccumulatedRate", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [
            collateralType,
            surplusDst,
            rateMultiplier,
        ]);
    };
    return SafeEngine;
}(geb_contract_base_1.BaseContractAPI));
exports.SafeEngine = SafeEngine;
