"use strict";
/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.EthJoin = void 0;
var geb_contract_base_1 = require("@reflexer-finance/geb-contract-base");
var bignumber_1 = require("@ethersproject/bignumber");
var EthJoin = /** @class */ (function (_super) {
    __extends(EthJoin, _super);
    function EthJoin() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EthJoin.prototype.addAuthorization = function (account) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }], "name": "addAuthorization", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [account]);
    };
    EthJoin.prototype.authorizedAccounts = function (address, multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "authorizedAccounts", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [address], multicall);
    };
    EthJoin.prototype.collateralType = function (multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [], "name": "collateralType", "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [], multicall);
    };
    EthJoin.prototype.contractEnabled = function (multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [], "name": "contractEnabled", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [], multicall);
    };
    EthJoin.prototype.decimals = function (multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [], "name": "decimals", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [], multicall);
    };
    EthJoin.prototype.disableContract = function () {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [], "name": "disableContract", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, []);
    };
    EthJoin.prototype.exit = function (account, wad) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address payable", "name": "account", "type": "address" }, { "internalType": "uint256", "name": "wad", "type": "uint256" }], "name": "exit", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [account, wad]);
    };
    EthJoin.prototype.join = function (ethValue, account) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }], "name": "join", "outputs": [], "stateMutability": "payable", "type": "function" };
        return this.getTransactionRequest(abi, [account], bignumber_1.BigNumber.from(ethValue));
    };
    EthJoin.prototype.removeAuthorization = function (account) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }], "name": "removeAuthorization", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [account]);
    };
    EthJoin.prototype.safeEngine = function (multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [], "name": "safeEngine", "outputs": [{ "internalType": "contract SAFEEngineLike", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [], multicall);
    };
    return EthJoin;
}(geb_contract_base_1.BaseContractAPI));
exports.EthJoin = EthJoin;
