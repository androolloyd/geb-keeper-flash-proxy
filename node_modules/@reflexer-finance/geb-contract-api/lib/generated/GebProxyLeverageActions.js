"use strict";
/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.GebProxyLeverageActions = void 0;
var geb_contract_base_1 = require("@reflexer-finance/geb-contract-base");
var bignumber_1 = require("@ethersproject/bignumber");
var GebProxyLeverageActions = /** @class */ (function (_super) {
    __extends(GebProxyLeverageActions, _super);
    function GebProxyLeverageActions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GebProxyLeverageActions.prototype.allowHandler = function (manager, usr, ok) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "manager", "type": "address" }, { "internalType": "address", "name": "usr", "type": "address" }, { "internalType": "uint256", "name": "ok", "type": "uint256" }], "name": "allowHandler", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [manager, usr, ok]);
    };
    GebProxyLeverageActions.prototype.allowSAFE = function (manager, safe, usr, ok) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "manager", "type": "address" }, { "internalType": "uint256", "name": "safe", "type": "uint256" }, { "internalType": "address", "name": "usr", "type": "address" }, { "internalType": "uint256", "name": "ok", "type": "uint256" }], "name": "allowSAFE", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [manager, safe, usr, ok]);
    };
    GebProxyLeverageActions.prototype.approveSAFEModification = function (safeEngine, usr) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "safeEngine", "type": "address" }, { "internalType": "address", "name": "usr", "type": "address" }], "name": "approveSAFEModification", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [safeEngine, usr]);
    };
    GebProxyLeverageActions.prototype.coinJoin_join = function (apt, safeHandler, wad) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "apt", "type": "address" }, { "internalType": "address", "name": "safeHandler", "type": "address" }, { "internalType": "uint256", "name": "wad", "type": "uint256" }], "name": "coinJoin_join", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [apt, safeHandler, wad]);
    };
    GebProxyLeverageActions.prototype.denySAFEModification = function (safeEngine, usr) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "safeEngine", "type": "address" }, { "internalType": "address", "name": "usr", "type": "address" }], "name": "denySAFEModification", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [safeEngine, usr]);
    };
    GebProxyLeverageActions.prototype.enterSystem = function (manager, src, safe) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "manager", "type": "address" }, { "internalType": "address", "name": "src", "type": "address" }, { "internalType": "uint256", "name": "safe", "type": "uint256" }], "name": "enterSystem", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [manager, src, safe]);
    };
    GebProxyLeverageActions.prototype.ethJoin_join__AddressAddress = function (ethValue, apt, safe) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "apt", "type": "address" }, { "internalType": "address", "name": "safe", "type": "address" }], "name": "ethJoin_join", "outputs": [], "stateMutability": "payable", "type": "function" };
        return this.getTransactionRequest(abi, [apt, safe], bignumber_1.BigNumber.from(ethValue));
    };
    GebProxyLeverageActions.prototype.ethJoin_join__AddressAddressUint256 = function (ethValue, apt, safe, value) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "apt", "type": "address" }, { "internalType": "address", "name": "safe", "type": "address" }, { "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "ethJoin_join", "outputs": [], "stateMutability": "payable", "type": "function" };
        return this.getTransactionRequest(abi, [apt, safe, value], bignumber_1.BigNumber.from(ethValue));
    };
    GebProxyLeverageActions.prototype.exitETH = function (manager, ethJoin, safe, wad) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "manager", "type": "address" }, { "internalType": "address", "name": "ethJoin", "type": "address" }, { "internalType": "uint256", "name": "safe", "type": "uint256" }, { "internalType": "uint256", "name": "wad", "type": "uint256" }], "name": "exitETH", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [manager, ethJoin, safe, wad]);
    };
    GebProxyLeverageActions.prototype.flashDeleverage = function (uniswapV2Pair, manager, ethJoin, taxCollector, coinJoin, weth, callbackProxy, safe) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "uniswapV2Pair", "type": "address" }, { "internalType": "address", "name": "manager", "type": "address" }, { "internalType": "address", "name": "ethJoin", "type": "address" }, { "internalType": "address", "name": "taxCollector", "type": "address" }, { "internalType": "address", "name": "coinJoin", "type": "address" }, { "internalType": "address", "name": "weth", "type": "address" }, { "internalType": "address", "name": "callbackProxy", "type": "address" }, { "internalType": "uint256", "name": "safe", "type": "uint256" }], "name": "flashDeleverage", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [
            uniswapV2Pair,
            manager,
            ethJoin,
            taxCollector,
            coinJoin,
            weth,
            callbackProxy,
            safe,
        ]);
    };
    GebProxyLeverageActions.prototype.flashDeleverageFreeETH = function (uniswapV2Pair, manager, ethJoin, taxCollector, coinJoin, weth, callbackProxy, safe, amountToFree) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "uniswapV2Pair", "type": "address" }, { "internalType": "address", "name": "manager", "type": "address" }, { "internalType": "address", "name": "ethJoin", "type": "address" }, { "internalType": "address", "name": "taxCollector", "type": "address" }, { "internalType": "address", "name": "coinJoin", "type": "address" }, { "internalType": "address", "name": "weth", "type": "address" }, { "internalType": "address", "name": "callbackProxy", "type": "address" }, { "internalType": "uint256", "name": "safe", "type": "uint256" }, { "internalType": "uint256", "name": "amountToFree", "type": "uint256" }], "name": "flashDeleverageFreeETH", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [
            uniswapV2Pair,
            manager,
            ethJoin,
            taxCollector,
            coinJoin,
            weth,
            callbackProxy,
            safe,
            amountToFree,
        ]);
    };
    GebProxyLeverageActions.prototype.flashLeverage = function (uniswapV2Pair, manager, ethJoin, taxCollector, coinJoin, weth, callbackProxy, safe, leverage) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "uniswapV2Pair", "type": "address" }, { "internalType": "address", "name": "manager", "type": "address" }, { "internalType": "address", "name": "ethJoin", "type": "address" }, { "internalType": "address", "name": "taxCollector", "type": "address" }, { "internalType": "address", "name": "coinJoin", "type": "address" }, { "internalType": "address", "name": "weth", "type": "address" }, { "internalType": "address", "name": "callbackProxy", "type": "address" }, { "internalType": "uint256", "name": "safe", "type": "uint256" }, { "internalType": "uint256", "name": "leverage", "type": "uint256" }], "name": "flashLeverage", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [
            uniswapV2Pair,
            manager,
            ethJoin,
            taxCollector,
            coinJoin,
            weth,
            callbackProxy,
            safe,
            leverage,
        ]);
    };
    GebProxyLeverageActions.prototype.freeETH = function (manager, ethJoin, safe, wad) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "manager", "type": "address" }, { "internalType": "address", "name": "ethJoin", "type": "address" }, { "internalType": "uint256", "name": "safe", "type": "uint256" }, { "internalType": "uint256", "name": "wad", "type": "uint256" }], "name": "freeETH", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [manager, ethJoin, safe, wad]);
    };
    GebProxyLeverageActions.prototype.generateDebt = function (manager, taxCollector, coinJoin, safe, wad) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "manager", "type": "address" }, { "internalType": "address", "name": "taxCollector", "type": "address" }, { "internalType": "address", "name": "coinJoin", "type": "address" }, { "internalType": "uint256", "name": "safe", "type": "uint256" }, { "internalType": "uint256", "name": "wad", "type": "uint256" }], "name": "generateDebt", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [
            manager,
            taxCollector,
            coinJoin,
            safe,
            wad,
        ]);
    };
    GebProxyLeverageActions.prototype.lockETH = function (ethValue, manager, ethJoin, safe) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "manager", "type": "address" }, { "internalType": "address", "name": "ethJoin", "type": "address" }, { "internalType": "uint256", "name": "safe", "type": "uint256" }], "name": "lockETH", "outputs": [], "stateMutability": "payable", "type": "function" };
        return this.getTransactionRequest(abi, [manager, ethJoin, safe], bignumber_1.BigNumber.from(ethValue));
    };
    GebProxyLeverageActions.prototype.lockETHAndGenerateDebt = function (ethValue, manager, taxCollector, ethJoin, coinJoin, safe, deltaWad) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "manager", "type": "address" }, { "internalType": "address", "name": "taxCollector", "type": "address" }, { "internalType": "address", "name": "ethJoin", "type": "address" }, { "internalType": "address", "name": "coinJoin", "type": "address" }, { "internalType": "uint256", "name": "safe", "type": "uint256" }, { "internalType": "uint256", "name": "deltaWad", "type": "uint256" }], "name": "lockETHAndGenerateDebt", "outputs": [], "stateMutability": "payable", "type": "function" };
        return this.getTransactionRequest(abi, [manager, taxCollector, ethJoin, coinJoin, safe, deltaWad], bignumber_1.BigNumber.from(ethValue));
    };
    GebProxyLeverageActions.prototype.lockETHLeverage = function (ethValue, uniswapV2Pair, manager, ethJoin, taxCollector, coinJoin, weth, callbackProxy, safe, leverage) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "uniswapV2Pair", "type": "address" }, { "internalType": "address", "name": "manager", "type": "address" }, { "internalType": "address", "name": "ethJoin", "type": "address" }, { "internalType": "address", "name": "taxCollector", "type": "address" }, { "internalType": "address", "name": "coinJoin", "type": "address" }, { "internalType": "address", "name": "weth", "type": "address" }, { "internalType": "address", "name": "callbackProxy", "type": "address" }, { "internalType": "uint256", "name": "safe", "type": "uint256" }, { "internalType": "uint256", "name": "leverage", "type": "uint256" }], "name": "lockETHLeverage", "outputs": [], "stateMutability": "payable", "type": "function" };
        return this.getTransactionRequest(abi, [
            uniswapV2Pair,
            manager,
            ethJoin,
            taxCollector,
            coinJoin,
            weth,
            callbackProxy,
            safe,
            leverage,
        ], bignumber_1.BigNumber.from(ethValue));
    };
    GebProxyLeverageActions.prototype.modifySAFECollateralization = function (manager, safe, deltaCollateral, deltaDebt) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "manager", "type": "address" }, { "internalType": "uint256", "name": "safe", "type": "uint256" }, { "internalType": "int256", "name": "deltaCollateral", "type": "int256" }, { "internalType": "int256", "name": "deltaDebt", "type": "int256" }], "name": "modifySAFECollateralization", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [
            manager,
            safe,
            deltaCollateral,
            deltaDebt,
        ]);
    };
    GebProxyLeverageActions.prototype.moveSAFE = function (manager, safeSrc, safeDst) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "manager", "type": "address" }, { "internalType": "uint256", "name": "safeSrc", "type": "uint256" }, { "internalType": "uint256", "name": "safeDst", "type": "uint256" }], "name": "moveSAFE", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [manager, safeSrc, safeDst]);
    };
    GebProxyLeverageActions.prototype.openLockETHAndGenerateDebt = function (ethValue, manager, taxCollector, ethJoin, coinJoin, collateralType, deltaWad) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "manager", "type": "address" }, { "internalType": "address", "name": "taxCollector", "type": "address" }, { "internalType": "address", "name": "ethJoin", "type": "address" }, { "internalType": "address", "name": "coinJoin", "type": "address" }, { "internalType": "bytes32", "name": "collateralType", "type": "bytes32" }, { "internalType": "uint256", "name": "deltaWad", "type": "uint256" }], "name": "openLockETHAndGenerateDebt", "outputs": [{ "internalType": "uint256", "name": "safe", "type": "uint256" }], "stateMutability": "payable", "type": "function" };
        return this.getTransactionRequest(abi, [
            manager,
            taxCollector,
            ethJoin,
            coinJoin,
            collateralType,
            deltaWad,
        ], bignumber_1.BigNumber.from(ethValue));
    };
    GebProxyLeverageActions.prototype.openLockETHLeverage = function (ethValue, uniswapV2Pair, manager, ethJoin, taxCollector, coinJoin, weth, callbackProxy, leverage) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "uniswapV2Pair", "type": "address" }, { "internalType": "address", "name": "manager", "type": "address" }, { "internalType": "address", "name": "ethJoin", "type": "address" }, { "internalType": "address", "name": "taxCollector", "type": "address" }, { "internalType": "address", "name": "coinJoin", "type": "address" }, { "internalType": "address", "name": "weth", "type": "address" }, { "internalType": "address", "name": "callbackProxy", "type": "address" }, { "internalType": "uint256", "name": "leverage", "type": "uint256" }], "name": "openLockETHLeverage", "outputs": [{ "internalType": "uint256", "name": "safe", "type": "uint256" }], "stateMutability": "payable", "type": "function" };
        return this.getTransactionRequest(abi, [
            uniswapV2Pair,
            manager,
            ethJoin,
            taxCollector,
            coinJoin,
            weth,
            callbackProxy,
            leverage,
        ], bignumber_1.BigNumber.from(ethValue));
    };
    GebProxyLeverageActions.prototype.openSAFE = function (manager, collateralType, usr) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "manager", "type": "address" }, { "internalType": "bytes32", "name": "collateralType", "type": "bytes32" }, { "internalType": "address", "name": "usr", "type": "address" }], "name": "openSAFE", "outputs": [{ "internalType": "uint256", "name": "safe", "type": "uint256" }], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [manager, collateralType, usr]);
    };
    GebProxyLeverageActions.prototype.quitSystem = function (manager, safe, dst) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "manager", "type": "address" }, { "internalType": "uint256", "name": "safe", "type": "uint256" }, { "internalType": "address", "name": "dst", "type": "address" }], "name": "quitSystem", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [manager, safe, dst]);
    };
    GebProxyLeverageActions.prototype.repayDebt = function (manager, coinJoin, safe, wad) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "manager", "type": "address" }, { "internalType": "address", "name": "coinJoin", "type": "address" }, { "internalType": "uint256", "name": "safe", "type": "uint256" }, { "internalType": "uint256", "name": "wad", "type": "uint256" }], "name": "repayDebt", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [manager, coinJoin, safe, wad]);
    };
    GebProxyLeverageActions.prototype.repayDebtAndFreeETH = function (manager, ethJoin, coinJoin, safe, collateralWad, deltaWad) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "manager", "type": "address" }, { "internalType": "address", "name": "ethJoin", "type": "address" }, { "internalType": "address", "name": "coinJoin", "type": "address" }, { "internalType": "uint256", "name": "safe", "type": "uint256" }, { "internalType": "uint256", "name": "collateralWad", "type": "uint256" }, { "internalType": "uint256", "name": "deltaWad", "type": "uint256" }], "name": "repayDebtAndFreeETH", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [
            manager,
            ethJoin,
            coinJoin,
            safe,
            collateralWad,
            deltaWad,
        ]);
    };
    GebProxyLeverageActions.prototype.transfer = function (collateral, dst, amt) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "collateral", "type": "address" }, { "internalType": "address", "name": "dst", "type": "address" }, { "internalType": "uint256", "name": "amt", "type": "uint256" }], "name": "transfer", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [collateral, dst, amt]);
    };
    GebProxyLeverageActions.prototype.transferCollateral = function (manager, safe, dst, wad) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "manager", "type": "address" }, { "internalType": "uint256", "name": "safe", "type": "uint256" }, { "internalType": "address", "name": "dst", "type": "address" }, { "internalType": "uint256", "name": "wad", "type": "uint256" }], "name": "transferCollateral", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [manager, safe, dst, wad]);
    };
    GebProxyLeverageActions.prototype.transferInternalCoins = function (manager, safe, dst, rad) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "manager", "type": "address" }, { "internalType": "uint256", "name": "safe", "type": "uint256" }, { "internalType": "address", "name": "dst", "type": "address" }, { "internalType": "uint256", "name": "rad", "type": "uint256" }], "name": "transferInternalCoins", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [manager, safe, dst, rad]);
    };
    GebProxyLeverageActions.prototype.transferSAFEOwnership = function (manager, safe, usr) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "manager", "type": "address" }, { "internalType": "uint256", "name": "safe", "type": "uint256" }, { "internalType": "address", "name": "usr", "type": "address" }], "name": "transferSAFEOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [manager, safe, usr]);
    };
    GebProxyLeverageActions.prototype.transferSAFEOwnershipToProxy = function (proxyRegistry, manager, safe, dst) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "proxyRegistry", "type": "address" }, { "internalType": "address", "name": "manager", "type": "address" }, { "internalType": "uint256", "name": "safe", "type": "uint256" }, { "internalType": "address", "name": "dst", "type": "address" }], "name": "transferSAFEOwnershipToProxy", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [
            proxyRegistry,
            manager,
            safe,
            dst,
        ]);
    };
    GebProxyLeverageActions.prototype.uniswapV2Call = function (_sender, _amount0, _amount1, _data) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "_sender", "type": "address" }, { "internalType": "uint256", "name": "_amount0", "type": "uint256" }, { "internalType": "uint256", "name": "_amount1", "type": "uint256" }, { "internalType": "bytes", "name": "_data", "type": "bytes" }], "name": "uniswapV2Call", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [
            _sender,
            _amount0,
            _amount1,
            _data,
        ]);
    };
    return GebProxyLeverageActions;
}(geb_contract_base_1.BaseContractAPI));
exports.GebProxyLeverageActions = GebProxyLeverageActions;
