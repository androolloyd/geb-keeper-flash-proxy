"use strict";
/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.GebSafeManager = void 0;
var geb_contract_base_1 = require("@reflexer-finance/geb-contract-base");
var GebSafeManager = /** @class */ (function (_super) {
    __extends(GebSafeManager, _super);
    function GebSafeManager() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GebSafeManager.prototype.allowHandler = function (usr, ok) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "usr", "type": "address" }, { "internalType": "uint256", "name": "ok", "type": "uint256" }], "name": "allowHandler", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [usr, ok]);
    };
    GebSafeManager.prototype.allowSAFE = function (safe, usr, ok) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "uint256", "name": "safe", "type": "uint256" }, { "internalType": "address", "name": "usr", "type": "address" }, { "internalType": "uint256", "name": "ok", "type": "uint256" }], "name": "allowSAFE", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [safe, usr, ok]);
    };
    GebSafeManager.prototype.collateralTypes = function (uinteger, multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "name": "collateralTypes", "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [uinteger], multicall);
    };
    GebSafeManager.prototype.enterSystem = function (src, safe) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "src", "type": "address" }, { "internalType": "uint256", "name": "safe", "type": "uint256" }], "name": "enterSystem", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [src, safe]);
    };
    GebSafeManager.prototype.firstSAFEID = function (address, multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "firstSAFEID", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [address], multicall);
    };
    GebSafeManager.prototype.handlerCan = function (address1, address2, multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "", "type": "address" }, { "internalType": "address", "name": "", "type": "address" }], "name": "handlerCan", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [address1, address2], multicall);
    };
    GebSafeManager.prototype.lastSAFEID = function (address, multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "lastSAFEID", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [address], multicall);
    };
    GebSafeManager.prototype.modifySAFECollateralization = function (safe, deltaCollateral, deltaDebt) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "uint256", "name": "safe", "type": "uint256" }, { "internalType": "int256", "name": "deltaCollateral", "type": "int256" }, { "internalType": "int256", "name": "deltaDebt", "type": "int256" }], "name": "modifySAFECollateralization", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [
            safe,
            deltaCollateral,
            deltaDebt,
        ]);
    };
    GebSafeManager.prototype.moveSAFE = function (safeSrc, safeDst) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "uint256", "name": "safeSrc", "type": "uint256" }, { "internalType": "uint256", "name": "safeDst", "type": "uint256" }], "name": "moveSAFE", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [safeSrc, safeDst]);
    };
    GebSafeManager.prototype.openSAFE = function (collateralType, usr) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "bytes32", "name": "collateralType", "type": "bytes32" }, { "internalType": "address", "name": "usr", "type": "address" }], "name": "openSAFE", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [collateralType, usr]);
    };
    GebSafeManager.prototype.ownsSAFE = function (uinteger, multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "name": "ownsSAFE", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [uinteger], multicall);
    };
    GebSafeManager.prototype.protectSAFE = function (safe, liquidationEngine, saviour) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "uint256", "name": "safe", "type": "uint256" }, { "internalType": "address", "name": "liquidationEngine", "type": "address" }, { "internalType": "address", "name": "saviour", "type": "address" }], "name": "protectSAFE", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [
            safe,
            liquidationEngine,
            saviour,
        ]);
    };
    GebSafeManager.prototype.quitSystem = function (safe, dst) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "uint256", "name": "safe", "type": "uint256" }, { "internalType": "address", "name": "dst", "type": "address" }], "name": "quitSystem", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [safe, dst]);
    };
    GebSafeManager.prototype.safeCan = function (address1, uinteger, address2, multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "", "type": "address" }, { "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "address", "name": "", "type": "address" }], "name": "safeCan", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [address1, uinteger, address2], multicall);
    };
    GebSafeManager.prototype.safeCount = function (address, multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "safeCount", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [address], multicall);
    };
    GebSafeManager.prototype.safeEngine = function (multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [], "name": "safeEngine", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [], multicall);
    };
    GebSafeManager.prototype.safeList = function (uinteger, multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "name": "safeList", "outputs": [{ "internalType": "uint256", "name": "prev", "type": "uint256" }, { "internalType": "uint256", "name": "next", "type": "uint256" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [uinteger], multicall);
    };
    GebSafeManager.prototype.safei = function (multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [], "name": "safei", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [], multicall);
    };
    GebSafeManager.prototype.safes = function (uinteger, multicall) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "name": "safes", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" };
        return this.ethCallOrMulticall(abi, [uinteger], multicall);
    };
    GebSafeManager.prototype.transferCollateral__Uint256AddressUint256 = function (safe, dst, wad) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "uint256", "name": "safe", "type": "uint256" }, { "internalType": "address", "name": "dst", "type": "address" }, { "internalType": "uint256", "name": "wad", "type": "uint256" }], "name": "transferCollateral", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [safe, dst, wad]);
    };
    GebSafeManager.prototype.transferCollateral__Bytes32Uint256AddressUint256 = function (collateralType, safe, dst, wad) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "bytes32", "name": "collateralType", "type": "bytes32" }, { "internalType": "uint256", "name": "safe", "type": "uint256" }, { "internalType": "address", "name": "dst", "type": "address" }, { "internalType": "uint256", "name": "wad", "type": "uint256" }], "name": "transferCollateral", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [collateralType, safe, dst, wad]);
    };
    GebSafeManager.prototype.transferInternalCoins = function (safe, dst, rad) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "uint256", "name": "safe", "type": "uint256" }, { "internalType": "address", "name": "dst", "type": "address" }, { "internalType": "uint256", "name": "rad", "type": "uint256" }], "name": "transferInternalCoins", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [safe, dst, rad]);
    };
    GebSafeManager.prototype.transferSAFEOwnership = function (safe, dst) {
        // prettier-ignore
        // @ts-ignore
        var abi = { "inputs": [{ "internalType": "uint256", "name": "safe", "type": "uint256" }, { "internalType": "address", "name": "dst", "type": "address" }], "name": "transferSAFEOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function" };
        return this.getTransactionRequest(abi, [safe, dst]);
    };
    return GebSafeManager;
}(geb_contract_base_1.BaseContractAPI));
exports.GebSafeManager = GebSafeManager;
