"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContractApis = void 0;
var _1 = require(".");
var geb_contract_base_1 = require("@reflexer-finance/geb-contract-base");
var RateSetter_1 = require("./generated/RateSetter");
var PIRawPerSecondCalculator_1 = require("./generated/PIRawPerSecondCalculator");
// Container class instantiate most GEB contracts
// prettier-ignore
var ContractApis = /** @class */ (function () {
    function ContractApis(network, chainProvider) {
        this.chainProvider = chainProvider;
        // Set the contract address list 
        var addressList = geb_contract_base_1.getAddressList(network);
        this.safeEngine = new _1.SafeEngine(addressList.GEB_SAFE_ENGINE, this.chainProvider);
        this.accountingEngine = new _1.AccountingEngine(addressList.GEB_ACCOUNTING_ENGINE, this.chainProvider);
        this.taxCollector = new _1.TaxCollector(addressList.GEB_TAX_COLLECTOR, this.chainProvider);
        this.liquidationEngine = new _1.LiquidationEngine(addressList.GEB_LIQUIDATION_ENGINE, this.chainProvider);
        this.oracleRelayer = new _1.OracleRelayer(addressList.GEB_ORACLE_RELAYER, this.chainProvider);
        this.globalSettlement = new _1.GlobalSettlement(addressList.GEB_GLOBAL_SETTLEMENT, this.chainProvider);
        this.debtAuctionHouse = new _1.DebtAuctionHouse(addressList.GEB_DEBT_AUCTION_HOUSE, this.chainProvider);
        this.preSettlementSurplusAuctionHouse = new _1.PreSettlementSurplusAuctionHouse(addressList.GEB_PRE_SETTLEMENT_SURPLUS_AUCTION_HOUSE, this.chainProvider);
        this.stabilityFeeTreasury = new _1.StabilityFeeTreasury(addressList.GEB_STABILITY_FEE_TREASURY, this.chainProvider);
        this.safeManager = new _1.GebSafeManager(addressList.SAFE_MANAGER, this.chainProvider);
        this.getSafes = new _1.GetSafes(addressList.GET_SAFES, this.chainProvider);
        this.joinETH_A = new _1.BasicCollateralJoin(addressList.GEB_JOIN_ETH_A, this.chainProvider);
        this.joinCoin = new _1.CoinJoin(addressList.GEB_COIN_JOIN, this.chainProvider);
        this.coin = new _1.Coin(addressList.GEB_COIN, this.chainProvider);
        this.proxyRegistry = new _1.GebProxyRegistry(addressList.PROXY_REGISTRY, this.chainProvider);
        this.collateralAuctionHouseETH_A = new _1.FixedDiscountCollateralAuctionHouse(addressList.GEB_COLLATERAL_AUCTION_HOUSE_ETH_A, this.chainProvider);
        this.medianizerEth = new _1.ChainlinkMedianEthusd(addressList.MEDIANIZER_ETH, this.chainProvider);
        this.medianizerCoin = new _1.UniswapConsecutiveSlotsMedianRaiusd(addressList.MEDIANIZER_RAI, this.chainProvider);
        this.rateSetter = new RateSetter_1.RateSetter(addressList.GEB_RRFM_SETTER, this.chainProvider);
        this.piCalculator = new PIRawPerSecondCalculator_1.PiRawPerSecondCalculator(addressList.GEB_RRFM_CALCULATOR, this.chainProvider);
        this.fsmEth = new _1.Osm(addressList.FEED_SECURITY_MODULE_ETH, this.chainProvider);
        this.fsmCoin = new _1.Dsm(addressList.FEED_SECURITY_MODULE_RAI, this.chainProvider);
        this.weth = new _1.Weth9(addressList.ETH, this.chainProvider);
        this.uniswapIncentive = new _1.GebUniswapRollingDistributionIncentives(addressList.GEB_UNISWAP_INCENTIVE, this.chainProvider);
    }
    return ContractApis;
}());
exports.ContractApis = ContractApis;
